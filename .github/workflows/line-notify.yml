name: Send LINE Notification

on:
  workflow_call:
    inputs:
      message_prefix:
        description: 'Prefix for the LINE message (e.g., "Build failed")'
        required: true
        type: string
      github_repository:
        description: 'GitHub repository (e.g., octocat/Spoon-Knife)'
        required: true
        type: string
      github_ref_name:
        description: 'GitHub ref name (e.g., main, v1.0.0)'
        required: true
        type: string
      github_run_id:
        description: 'GitHub run ID'
        required: true
        type: string
    secrets:
      LINE_CHANNEL_ACCESS_TOKEN:
        required: true
      LINE_USER_ID:
        required: true

jobs:
  send-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Send LINE message
        run: |
          UUID=$(uuidgen)
          LINE_MESSAGE=$({
            echo '${{ inputs.message_prefix }}'
            echo ''
            echo 'üì¶ „Éó„É≠„Ç∏„Çß„ÇØ„Éà: ${{ inputs.github_repository }}'
            echo 'üîñ „Éñ„É©„É≥„ÉÅ/„Çø„Ç∞: ${{ inputs.github_ref_name }}'
            echo 'üîó Ë©≥Á¥∞: https://github.com/${{ inputs.github_repository }}/actions/runs/${{ inputs.github_run_id }}'
          })
          curl -v -X POST https://api.line.me/v2/bot/message/push \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}' \
            -H "X-Line-Retry-Key: $UUID" \
            -d "$(jq -n \
              --arg to "${{ secrets.LINE_USER_ID }}" \
              --arg message "$LINE_MESSAGE" \
              '{to: $to, messages: [{ type: "text", text: $message }]}'
            )"
